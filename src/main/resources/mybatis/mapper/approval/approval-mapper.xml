<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="approval">

    <select id="toList" resultType="com.end2end.spring.approval.dto.ApprovalDTO">
        SELECT * FROM approval WHERE state = #{state} ORDER BY regDate DESC
    </select>


    <select id="selectById" resultType="map">
        SELECT a.* , e.*, j.name AS jobName, f.name AS formName
        FROM approval a
            join employee e on a.employeeid = e.id
            JOIN job j ON e.jobid = j.id
            JOIN approval_form f ON a.approvalformid = f.id
        WHERE a.id = #{id}
    </select>

    <select id="selectByState" resultType="map">
        SELECT a.id AS ID,
               a.title AS TITLE,
               a.state AS STATE,
               a.regDate AS REGDATE,
               e.profileImg AS profileImg,
               e.name AS DRAFTERNAME,
               af.name AS FORMNAME
        FROM approval a
                 JOIN approver ap ON a.id = ap.approvalid
                 JOIN employee e ON a.employeeid = e.id
                 JOIN approval_form af ON a.approvalformid = af.id
        WHERE ap.employeeid = #{employeeId}
          AND a.state = #{state}
    </select>

    <insert id="insert">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            SELECT #{prefixes} || '-' || APPROVAL_ID_SEQ.nextval FROM DUAL
        </selectKey>
        INSERT INTO APPROVAL(ID, EMPLOYEEID, APPROVALFORMID, DEPARTMENTID, TITLE, CONTENT)
               VALUES (#{id}, #{employeeId}, ${approvalFormId}, ${departmentId}, #{title}, #{content})
    </insert>

    <update id="updateState">
        UPDATE approval
        SET state = #{state}
        WHERE id = #{id}
    </update>

    <select id="selectFormList" resultType="com.end2end.spring.approval.dto.ApprovalFormDTO">
        SELECT *
        FROM APPROVAL_FORM
        order by id
    </select>

    <select id="selectByFormId" parameterType="int" resultType="com.end2end.spring.approval.dto.ApprovalFormDTO">
        SELECT *
        FROM APPROVAL_FORM
        WHERE id = #{id, jdbcType=INTEGER}
    </select>

    <select id="search" resultType="map">
        SELECT a.id AS ID,
               a.title AS TITLE,
               a.state AS STATE,
               a.regDate AS REGDATE,
               e.profileImg AS profileImg,
               e.name AS DRAFTERNAME,
               af.name AS FORMNAME
        FROM approval a
                 JOIN approver ap ON a.id = ap.approvalid
                 JOIN employee e ON a.employeeid = e.id
                 JOIN approval_form af ON a.APPROVALFORMID = af.id
        WHERE ap.employeeid = #{employeeId}
          AND a.state = #{state}
          AND (a.title LIKE '%' || #{keyword} || '%'
            OR e.name LIKE '%' || #{keyword} || '%'
            OR af.name LIKE '%' || #{keyword} || '%')
    </select>

    <select id="selectDTOById" resultType="com.end2end.spring.approval.dto.ApprovalDTO">
        SELECT * FROM APPROVAL WHERE ID = #{id}
    </select>

    <select id="selectFormLikeName" resultType="com.end2end.spring.approval.dto.ApprovalFormDTO">
        SELECT *
        FROM APPROVAL_FORM
        WHERE NAME LIKE '%' || #{name} || '%'
    </select>

    <select id="searchDetail" resultType="map">
        SELECT
            a.*,
            f.name AS formName,
            e.*
        FROM approval a
                 JOIN approval_form f ON a.approvalformid = f.id
                 JOIN employee e ON a.employeeid = e.id
        WHERE
            (#{form, jdbcType=VARCHAR} IS NULL OR f.name = #{form})
          AND (#{state, jdbcType=VARCHAR} IS NULL OR a.state = #{state})
          AND (#{drafter, jdbcType=VARCHAR} IS NULL OR e.name LIKE '%' || #{drafter} || '%')
          AND (#{startDate, jdbcType=TIMESTAMP} IS NULL OR a.regdate >= #{startDate})
          AND (#{endDate, jdbcType=TIMESTAMP} IS NULL OR #{endDate}>=a.regdate)
    </select>

    <select id="selectByFormName" parameterType="String" resultType="com.end2end.spring.approval.dto.ApprovalFormDTO">
        SELECT *
        FROM APPROVAL_FORM
        WHERE name = #{name,jdbcType=VARCHAR}
    </select>

    <select id="selectDepartmentNameById" resultType="string">
        SELECT d.name
        FROM employee e
                 JOIN department d ON e.departmentid = d.id
        WHERE e.id = #{employeeId}
    </select>

    <select id="allApprovals" resultType="map">
        SELECT
            a.id,
            a.title,
            a.regdate,
            a.state AS state,
            e.name AS DRAFTERNAME,
            af.name AS formName
        FROM approval a
                 JOIN employee e ON a.employeeid = e.id
                 JOIN approval_form af ON a.approvalformid = af.id
        ORDER BY a.regdate DESC
    </select>

    <insert id="insertImportant" parameterType="com.end2end.spring.approval.dto.CheckImportantDTO">
        insert into important_approval (
        id, employeeid, approvalid, leadercheckyn, regdate
        ) values (
        IMPORTANT_APPROVAL_ID_SEQ.nextval,
        #{employeeId, jdbcType=VARCHAR},
        #{approvalId, jdbcType=VARCHAR},
        #{leaderCheckYn},
        SYSDATE
        )
    </insert>

    <select id="importantlist" resultType="map">
        SELECT DISTINCT a.id AS ID,
               a.title AS TITLE,
               a.state AS STATE,
               a.regDate AS REGDATE,
               e.profileImg AS profileImg,
               e.name AS DRAFTERNAME,
               af.name AS FORMNAME
        FROM approval a
                 JOIN approver ap ON a.id = ap.approvalid
                 JOIN employee e ON a.employeeid = e.id
                 JOIN approval_form af ON a.approvalformid = af.id
                 JOIN important_approval i ON a.id = i.approvalid
        WHERE i.employeeid = #{employeeId, jdbcType=VARCHAR}
          AND i.leadercheckyn = 'Y'
        ORDER BY a.regdate DESC
    </select>

    <update id="removeImportant" parameterType="com.end2end.spring.approval.dto.CheckImportantDTO">
        update important_approval set leaderCheckYn = 'N'
        WHERE approvalid = #{approvalId} AND employeeid = #{employeeId}
    </update>
</mapper>