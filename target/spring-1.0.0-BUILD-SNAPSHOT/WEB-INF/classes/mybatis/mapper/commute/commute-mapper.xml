<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commute">
    <select id="selectById" resultType="com.end2end.spring.commute.dto.CommuteDTO">
        SELECT * FROM COMMUTE WHERE id = ${id}
    </select>

    <select id="selectTodayWorkTimeList" resultType="com.end2end.spring.commute.dto.TodayWorkTimeDTO">
        SELECT
            WORK_OFF.EMPLOYEEID AS employeeId,
            WORK_OFF_TIME AS workOffTime,
            WORK_ON_TIME AS workOnTime
        FROM (
            SELECT EMPLOYEEID, MAX(REGDATE) AS WORK_OFF_TIME, state
            FROM COMMUTE
            WHERE
                TRUNC(REGDATE) = TRUNC(SYSDATE)
            AND
                STATE = 'WORK_OFF'
            GROUP BY EMPLOYEEID, state) WORK_OFF
        JOIN (
            SELECT EMPLOYEEID, REGDATE AS WORK_ON_TIME, STATE
            FROM COMMUTE
            WHERE
                STATE = 'WORK_ON'
            AND
                TRUNC(REGDATE) = TRUNC(SYSDATE)) WORK_ON
        ON WORK_OFF.EMPLOYEEID = WORK_ON.EMPLOYEEID
    </select>

    <select id="selectWorked" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT *
        FROM EMPLOYEE
        WHERE
            ID IN (
                SELECT employeeId
                FROM COMMUTE
                WHERE
                    STATE = 'WORK_OFF'
                AND
                    TRUNC(regDate) = TRUNC(SYSDATE))
        AND
            ID IN (
                SELECT employeeId
                FROM COMMUTE
                WHERE
                    STATE = 'WORK_ON'
                AND
                    TRUNC(regDate) = TRUNC(SYSDATE))
    </select>

    <insert id="insert">
        INSERT INTO COMMUTE(id, state, employeeId) VALUES (COMMUTE_ID_SEQ.NEXTVAL, #{state}, #{employeeId})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT COMMUTE_ID_SEQ.CURRVAL FROM DUAL
        </selectKey>
    </insert>

    <select id="isExistByState" resultType="Integer">
        SELECT COUNT(*)
        FROM COMMUTE
        WHERE
            employeeId = #{employeeId}
        AND
            state = #{state}
        AND
            TRUNC(regDate) = TRUNC(SYSDATE)
    </select>

    <select id="selectThisWeekWorkTime" resultType="com.end2end.spring.commute.dto.TodayWorkTimeDTO">
        SELECT wo.workDay as workDay, wf.regDate AS workOffTime, wo.regDate AS workOnTime
        FROM (
            SELECT TRUNC(regDate) as workDay, workOff.*
            FROM COMMUTE workOff
            WHERE
                employeeId = #{employeeId}
            AND
                state = 'WORK_OFF') wf
        JOIN (
            SELECT TRUNC(regDate) as workDay, workOn.*
            FROM COMMUTE workOn
            WHERE
        employeeId = #{employeeId}
            AND
                state = 'WORK_ON') wo
        ON wo.workDay = wf.workDay
        WHERE
            wf.workDay BETWEEN TRUNC(SYSDATE, 'IW') AND TRUNC(SYSDATE)
    </select>

    <select id="selectByStateAndEmployeeId" resultType="com.end2end.spring.commute.dto.CommuteDTO">
        SELECT *
        FROM COMMUTE
        WHERE
            employeeId = #{employeeId}
        AND
            state = #{state}
        AND
            TRUNC(regDate) = TRUNC(SYSDATE)
    </select>

    <select id="countWorKOnThisWeekByEmployeeId" resultType="Integer">
        SELECT COUNT(*)
        FROM COMMUTE
        WHERE
            state = 'WORK_ON'
        AND
            TRUNC(regDate) BETWEEN TRUNC(SYSDATE, 'IW') AND TRUNC(SYSDATE)
        AND
            employeeId = #{employeeId}
    </select>

    <select id="selectByPeriodAndState" resultType="com.end2end.spring.commute.dto.CommuteStateDTO">
        SELECT employeeId, TRUNC(regDate) AS dates, state, regDate
        FROM COMMUTE
        WHERE
            employeeId = #{employeeId}
        AND
            TRUNC(regDate) BETWEEN #{startDate} AND #{endDate}
    </select>
</mapper>