<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employee">

    <select id="selectAll" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT
        e.id AS id,
        e.name,
        e.departmentId,
        d.name AS departmentName,
        e.jobId,
        j.name AS jobName,
        e.role AS role,
        e.contact
        FROM EMPLOYEE e
        JOIN DEPARTMENT d ON e.departmentId = d.id
        JOIN JOB j ON e.jobId = j.id
    </select>

    <select id="selectAllDepartment" resultType="com.end2end.spring.employee.dto.DepartmentDTO">
        SELECT * FROM DEPARTMENT
    </select>

    <select id="selectAllJob" resultType="com.end2end.spring.employee.dto.JobDTO">
        SELECT * FROM JOB
    </select>

    <insert id="insert">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            SELECT CONCAT(to_char(trunc(sysdate), 'YYMMDD'), EMPLOYEE_ID_SEQ.NEXTVAL) FROM DUAL
        </selectKey>
        INSERT INTO EMPLOYEE(id, departmentId, jobId, email, name, profileImg, contact)
        VALUES (#{id}, ${departmentId}, ${jobId}, #{email}, #{name}, #{profileImg}, #{contact})
    </insert>

    <insert id="insertDetail">
        INSERT INTO EMPLOYEE_DETAIL(id, password, postcode, address, detailAddress, birthday, loginId)
        VALUES (#{id}, #{password}, ${postCode}, #{detailAddress}, #{address}, #{birthday}, #{loginId})
    </insert>

    <select id="selectByDepartmentId" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT e.* , j.name as jobName
        FROM EMPLOYEE e
        join job j
        ON e.jobid = j.id
        WHERE departmentId = ${departmentId}
    </select>

    <select id="login" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT EMPLOYEE.*, JOB.NAME AS jobName, DEPARTMENT.NAME AS departmentName
        FROM EMPLOYEE_DETAIL
        JOIN EMPLOYEE
            ON EMPLOYEE_DETAIL.ID = EMPLOYEE.ID
        JOIN JOB
            ON EMPLOYEE.jobId = JOB.id
        JOIN DEPARTMENT
            ON EMPLOYEE.departmentId = DEPARTMENT.id
        WHERE LOGINID = #{loginId} AND PASSWORD = #{password}
    </select>

    <select id="selectDetailById" resultType="com.end2end.spring.employee.dto.EmployeeDetailDTO">
        SELECT
        e.id AS id,
        e.name,
        e.email,
        e.profileImg,
        e.departmentId,
        d.name AS departmentName,
        e.jobId,
        j.name AS jobName,
        e.role AS role,
        ed.loginId,
        ed.password,
        ed.postCode,
        ed.address,
        ed.detailAddress,
        e.contact,
        ed.birthday,
        ed.hiredDate as hiredate
        FROM EMPLOYEE_DETAIL ed
        JOIN EMPLOYEE e ON ed.id = e.id
        JOIN DEPARTMENT d ON e.departmentId = d.id
        JOIN JOB j ON e.jobId = j.id
        WHERE e.id = #{id}
    </select>

    <select id="selectJobById" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT
        jobId
        FROM EMPLOYEE
        WHERE id = #{id}
    </select>

    <update id="roleUpdate">
        UPDATE EMPLOYEE
        SET role = #{role}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE
        FROM EMPLOYEE
        WHERE id = #{id}
    </delete>

    <select id="idVali" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM EMPLOYEE_DETAIL
        WHERE loginId = #{loginId}
    </select>

    <select id="countNoAuth" resultType="Integer">
        SELECT COUNT(*)
        FROM EMPLOYEE
        WHERE role = 'NO_AUTH'
    </select>

    <select id="selectByThisMonthBirthday" resultType="com.end2end.spring.employee.dto.EmployeeDTO">
        SELECT EMPLOYEE.*, EMPLOYEE_DETAIL.BIRTHDAY, JOB.NAME AS jobName, DEPARTMENT.NAME AS departmentName
        FROM EMPLOYEE
        JOIN EMPLOYEE_DETAIL
        ON EMPLOYEE.ID = EMPLOYEE_DETAIL.ID
        JOIN DEPARTMENT
        ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENTID
        JOIN JOB
        ON JOB.ID = EMPLOYEE.JOBID
        WHERE
            EXTRACT(MONTH FROM BIRTHDAY) = TO_CHAR(SYSDATE, 'MM')
        ORDER BY TO_CHAR(birthday, 'DD')
    </select>
</mapper>